@model FolderViewModel
@{
    ViewBag.PageName = "Files";
    ViewData["Title"] = "Files";
    var methodList = new[] { new SelectListItem { Text = "Simple", Value = "simple" }, new SelectListItem { Text = "Advanced", Value = "advanced", Selected = true } };
}
<aiplugs-blade wide expanded>
    <ul is="aiplugs-breadcrumb" id="file-modal__breadcrumb">
        @foreach((var name, var link) in Model.Breadcrumbs)
        {
            <li><a href="@link">@name</a></li>
        }
    </ul>
    <form id="files" method="GET" class="flex">
        <aiplugs-search name="keyword" method-name="method" method-list="@methodList" />
        <aiplugs-actions id="actions">
            <button is="aiplugs-button" looks="block" color="primary">Upload</button>
            <button is="aiplugs-button" looks="block">New Folder</button>
            <button is="aiplugs-button" looks="block" when="one" open="#rename-dialog">Rename</button>
            <template id="rename-dialog">
                <aiplugs-dialog>
                    <div slot="content">
                        <aiplugs-input label="Name" value-from="[name='folders[]']" />
                    </div>
                    <div slot="actions">
                        <button type="button" is="aiplugs-button" looks="block" color="primary" close="aiplugs-dialog">Update</button>
                        <button type="button" is="aiplugs-button" close="aiplugs-dialog">Close</button>
                    </div>
                </aiplugs-dialog>
            </template>
            <span is="aiplugs-space"></span>
            <button type="button" is="aiplugs-button" when="any" open="#delete-dialog">Button</button>
            <template id="delete-dialog">
                <aiplugs-dialog>
                    <p slot="content">本当に削除しますか？</p>
                    <div slot="actions">
                        <button type="submit" is="aiplugs-button" color="warning" close="aiplugs-dialog">Yes</button>
                        <button type="button" is="aiplugs-button" looks="block" color="primary" close="aiplugs-dialog">No</button>
                    </div>
                </aiplugs-dialog>
            </template>
        </aiplugs-actions>

        <aiplugs-list id="list" label-name="Name" class-name="flex" label-size="Size" style-size="width:8rem;" label-lastmodified="Last Modified" onchange="onSelectedItems()">
            @foreach (var folder in Model.Folders)
            {
                <aiplugs-list-item name="folders[]" item="@folder.Name">
                    <aiplugs-list-column class="flex">
                        <a href="@folder.Link"><i class="fa fa-folder"></i>@folder.Name</a>
                    </aiplugs-list-column>
                    <aiplugs-list-column class="text-small"></aiplugs-list-column>
                    <aiplugs-list-column class="text-small"></aiplugs-list-column>
                </aiplugs-list-item>
            }
            <aiplugs-list-item name="folders[]" item="0" selected>
                <aiplugs-list-column class="flex">
                    <a href=""><i class="fa fa-folder"></i>selected</a>
                </aiplugs-list-column>
                <aiplugs-list-column class="text-small"></aiplugs-list-column>
                <aiplugs-list-column class="text-small"></aiplugs-list-column>
            </aiplugs-list-item>
            @if (Model.Files.Count() > 0)
            {
                var maxSize = Model.Files.Max(f => f.Size);
                var padSize = maxSize.ToString("##,###").Length;
                foreach (var file in Model.Files)
                {
                    <aiplugs-list-item name="files[]" item="@file.Name">
                        <aiplugs-list-column class="flex" ic-get-from="@(file.PreviewLink)" ic-target="#preview" ic-replace-target="true">
                            <i class="far fa-file"></i>@file.Name
                        </aiplugs-list-column>
                        <aiplugs-list-column class="text-small" style="width:8rem;" ic-get-from="@(file.PreviewLink)" ic-target="#preview" ic-replace-target="true">
                            <span style="text-align: right; width: @(padSize * 8)px;">
                                @file.Size.ToString("##,###")
                            </span>
                            [B]
                        </aiplugs-list-column>
                        <aiplugs-list-column class="text-small" ic-get-from="@(file.PreviewLink)" ic-target="#preview" ic-replace-target="true">
                            @file.LastModifiedAt.LocalDateTime
                        </aiplugs-list-column>
                    </aiplugs-list-item>
                }
            }
        </aiplugs-list>
    </form>
</aiplugs-blade>
<div id="preview"></div>
<script>
    function onSelectedItems() {
        const actions = AiplugsElements.find('#actions');
        const list = AiplugsElements.find('#list');
        actions.items = list.electedItems.length;
    }
</script>
<script type="text/html">
    <h1>Hello</h1>
</script>